
let int x = 3;
let int a = (2 + (4 * 3)) - (8 / 2);
let int y = x * 4;
let int b = x * (4 + 2);
let int z = (x + y) * (x - y);
let int z = ((((x + y)))) * ((x - y));
let int g1 = (((((1 + 2) + 3) + 4) + 5) + 6);
let int g2 = 1 + 2 + 3 + 4 + 5 + 6;
let int g3 = 15 % 4;
let int g4 = (12 + 3) % 4;
let int n1 = -3;
let int n2 = -(1 + 3);
let int u1 = 1234u;
let int u2 = -1234u;
let int p1 = +3;
let int p2 = +3 + +5;
let int p3 = -p1 + 3;
let unsigned int bn1 = ~0u;
let unsigned int bn2 = ~1u;
let unsigned int bn3 = ~3u;
let unsigned int bn4 = ~0xFFFFu;
let int comma1 = 3*3,comma2 = 4*4;
let int comma2 = (3*3,4*4);
let int comma3 = (3*3,4*4,5*5,6*6,7*7,8*8,9*9);
let int lognot1 = !0;
let int lognot2 = !1;
let int lognot3 = !2;
let int lognot4 = !!0;
let int lognot5 = !!1;
let int lognot6 = !!2;
let int lognot7 = !!!0;
let int lognot8 = !!!1;
let int lognot9 = !!!2;
let int lognot10 = !0.0;
let int lognot11 = !1.0;
let bool b1 = true;
let bool b2 = false;
let bool b3 = !true;
let bool b4 = !false;
let int bi1 = true;
let int bi2 = false;
let int bi3 = ~true;
let int bi4 = ~false;
let int bia1 = true + 1;
let int bia2 = true + 2;
let int bia3 = false + 1;
let int bia4 = false + 2;
let int bia5 = true + true;
let int bia6 = true + false;
let int bia7 = true + true + true + true;
let int bia8 = 3 * (true + true + true + true);
let int bia9 = 3 * true * true * true * true;
let int bia10 = 3 * true * false;
let int lor1 = 0 || 0;
let int lor2 = 0 || 1;
let int lor3 = 0 || 2;
let int lor4 = 1 || 1;
let int lor5 = true || false;
let int land1 = 0 && 0;
let int land2 = 0 && 1;
let int land3 = 0 && 2;
let int land4 = 1 && 1;
let int land5 = true && true;
let int land6 = true && false;
let int tern1 = true ? 1 : -1;
let int tern2 = false ? -1 : 1;
let int tern3 = (11 || 40) ? 1 : -1;
let int tern4 = (-1 + 1) ? -1 : 1;
let int tern5 = (-1 + 2) ? 1 : -1;
let int tern6 = (6 + 7) ? 666 : 111;
let int tern7 = func1() ? 666 : 111;
let int tern8 = func1() ? func2() : func3();
let int tern9 = true ? func2() : func3();
let int tern10 = func1() ? (x + 3) : (x - 3);
let int tern11 = true ? (x + 3) : (x - 3);
let int tern11b= false ? (x + 3) : (x - 3);
let int tern12 = func1() ? (3 + 3) : (4 - 3);
let int binor1 = 1|0;
let int binor2 = 1|1;
let int binor3 = 1|3;
let int binor4 = 1|2;
let int binor5 = 1|2|4|8;
let int binor6 = true | 4;
let int binor7 = (true * 3) | 4;
let int binxor1 = 1^0;
let int binxor2 = 1^1;
let int binxor3 = 1^3;
let int binxor4 = 2^3;
let int binxor5 = 1^2^4^8;
let int binand1 = 1&1;
let int binand2 = 3&0;
let int binand3 = 7&1;
let int binand4 = 7&3;
let int binand5 = 0xFF&0x77&0x35;
let int equ1 = 1 == 1;
let int equ2 = 0 == 0;
let int equ3 = (1 + 0) == (2 - 1);
let int equ4 = 1 == true;
let int equ5 = true == true;
let int equ6 = false == 0;
let int equ7 = (555 + 111) == 666;
let int equ8 = 1.0 == 1.0;
let int equ9 = (1.5 + 4.5) == 6.0;
let int equ10 = 2 == 3;
let int equ11 = 10 == true;
let int nequ1 = 1 != 0;
let int nequ2 = true != false;
let int nequ3 = (1 + 1) != (2 + 2);
let int nequ4 = 1.5 != 2.0;
let int nequ5 = true != true;

let float x = 3.3;
let float y = 1 + 1;
let float y1 = 1.0 + 1;
let float y2 = 1 + 1.0;
let float y3 = 1.5 + 4.5;
let float y4 = (((((1.0 + 2.0) + 3.0) + 4.0) + 5.0) + 6.0);
let float y5 = 1.0 + 2.0 + 3.0 + 4.0 + 5.0 + 6.0;
let float n1 = -3.0;
let float n2 = -(1.5 + 3.5);
let float n3 = 4.5 - 3.5;

let float x1 = 3.0 * 5.0;
let float x2 = 2.0 / 1.5;
let float x3 = 3.0 - 1.5;
let float x4 = 2.5 + 1.5;

fn int func1(int x,int y) {
	return x+y;
}

fn void func2(void) {
	let int x = func1(5*(3+4),4+5+6);
	let int y = func1((3+4+5)*x,x+x);
}

